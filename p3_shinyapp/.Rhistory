source('~/Downloads/R-lecture-01/R/example0.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Downloads/R-lecture-01/R/example3.R')
source('~/Downloads/R-lecture-01/R/example6.R')
source('~/Downloads/R-lecture-01/R/example6.R')
source('~/Downloads/R-lecture-01/R/example6.R')
source('~/Downloads/R-lecture-01/R/example6.R')
source('~/Downloads/R-lecture-01/R/example6.R')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Documents/Github/INFO201_BookExercises/book-exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/Github/INFO201_BookExercises/book-exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/Github/INFO201_BookExercises/book-exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/Github/INFO201_BookExercises/book-exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/Github/INFO201_BookExercises/book-exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/Github/INFO201_BookExercises/book-exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/Github/INFO201_BookExercises/book-exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/Github/INFO201_BookExercises/book-exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/Github/INFO201_BookExercises/book-exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/Github/INFO201_BookExercises/book-exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/Github/INFO201_BookExercises/book-exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/Github/INFO201_BookExercises/book-exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/Github/INFO201_BookExercises/book-exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/Github/INFO201_BookExercises/book-exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/Github/INFO201_BookExercises/book-exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/Github/INFO201_BookExercises/book-exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/Github/INFO201_BookExercises/book-exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/Github/INFO201_BookExercises/book-exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/Github/INFO201_BookExercises/book-exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/Github/INFO201_BookExercises/book-exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/Github/INFO201_BookExercises/book-exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/Github/INFO201_BookExercises/book-exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/Github/INFO201_BookExercises/book-exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/Documents/Github/INFO201_BookExercises/book-exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages(ggmap)
install.packages("ggmap")
source('~/.active-rstudio-document', echo=TRUE)
# Formatting and filtering data
samp <- permit_data %>%
filter(!is.na(Longitude), !is.na(Latitude), Longitude <0, Latitude < 100) %>%
filter(PermitTypeDesc == "New") %>%
mutate(year = as.numeric(substr(IssuedDate, 1, 4))) %>%
filter(year > 2010)
# Formatting and filtering data
samp <- permit_data %>%
filter(!is.na(Longitude), !is.na(Latitude), Longitude <0, Latitude < 100) %>%
filter(PermitTypeDesc == "New") %>%
mutate(year = as.numeric(substr(IssuedDate, 1, 4))) %>%
filter(year > 2010)
# Chart option 1: years as categories
qmplot(
data = samp,
x = Longitude,
y = Latitude,
color = as.character(year)
) + scale_color_discrete() +
labs(color = "Year")
# Chart option 2: years as continuous
qmplot(
data = samp,
x = Longitude,
y = Latitude,
color = year
) + scale_color_continuous() +
labs(color = "Year")
# Chart option 1: years as categories
qmplot(
data = samp,
x = Longitude,
y = Latitude,
color = as.character(year)
) + scale_color_discrete() +
labs(color = "Year")
# Chart option 2: years as continuous
qmplot(
data = samp,
x = Longitude,
y = Latitude,
color = year
) + scale_color_continuous() +
labs(color = "Year")
# Chart option 1: years as categories
qmplot(
data = samp,
x = Longitude,
y = Latitude,
color = as.character(year)
) + scale_color_discrete() +
labs(color = "Year")
# Chart option 2: years as continuous
qmplot(
data = samp,
x = Longitude,
y = Latitude,
color = year
) + scale_color_continuous() +
labs(color = "Year")
install.packages("rmarkdown")
library("rmarkdown")
```{r calc_x}
```{r calc_x}
# In this code chunk, assign a value to the variable `x`
x <- 100
```
calc_x
```{r calc_x}
# In this code chunk, assign a value to the variable `x`
x <- 100
```
```{r calc_x}
# In this code chunk, assign a value to the variable `x`
test_x <- 100
calc_x
test_x
```{r calc_x}
# In this code chunk, assign a value to the variable `x`
test_x <- 100
test_x
```{r calc_x}
# In this code chunk, assign a value to the variable `x`
test_x <- 100
```
test_x
test_x
```{r calc_x}
# In this code chunk, assign a value to the variable `x`
test_x <- 100
```
test_x
knitr::opts_chunk$set(echo = TRUE)
```{r calc_x}
# In this code chunk, assign a value to the variable `x`
test_x <- 100
```{r calc_x}
```{r calc_x}
```{r calc_x}
```{r calc_x}
```{r calc_x}
# In this code chunk, assign a value to the variable `x`
test_x <- 100
test_x
library(ggplot2)
df <- data.frame(
label = c("A", "B", "C", "D"),
value = 1:4,
stringsAsFactors = F
)
ggplot(df) +
geom_col(mapping = aes(x = label, y = value, fill = "blue"))
ggplot(df) +
geom_col(mapping = aes(x = label, y = value, fill = blue))
ggplot(df) +
geom_col(mapping = aes(x = label, y = value, fill = "blue"))
ggplot(df) +
geom_col(mapping = aes(x = label, y = value, fill = blue))
# Chart option 2: years as continuous
qmplot(
data = samp,
x = Longitude,
y = Latitude,
color = year
) + scale_color_continuous() +
labs(color = "Year")
# Formatting and filtering data
samp <- permit_data %>%
filter(!is.na(Longitude), !is.na(Latitude), Longitude <0, Latitude < 100) %>%
filter(PermitTypeDesc == "New") %>%
mutate(year = as.numeric(substr(IssuedDate, 1, 4))) %>%
filter(year > 2010)
# Load data from GitHub
permit_data <- read.csv(
"https://raw.githubusercontent.com/programming-for-data-science/in-action/master/interactive-vis/data/Building_Permits.csv",
stringsAsFactors = F)
# Formatting and filtering data
samp <- permit_data %>%
filter(!is.na(Longitude), !is.na(Latitude), Longitude <0, Latitude < 100) %>%
filter(PermitTypeDesc == "New") %>%
mutate(year = as.numeric(substr(IssuedDate, 1, 4))) %>%
filter(year > 2010)
# Chart option 1: years as categories
qmplot(
data = samp,
x = Longitude,
y = Latitude,
color = as.character(year)
) + scale_color_discrete() +
labs(color = "Year")
# Chart option 2: years as continuous
qmplot(
data = samp,
x = Longitude,
y = Latitude,
color = year
) + scale_color_continuous() +
labs(color = "Year")
# Chart option 1: years as categories
qmplot(
data = samp,
x = Longitude,
y = Latitude,
color = as.character(year)
) + scale_color_discrete() +
labs(color = "Year")
# Chart option 2: years as continuous
qmplot(
data = samp,
x = Longitude,
y = Latitude,
color = year
) + scale_color_continuous() +
labs(color = "Year")
# Chart option 1: years as categories
qmplot(
data = samp,
x = Longitude,
y = Latitude,
color = as.character(year)
) + scale_color_discrete() +
labs(color = "Year")
shiny::runApp('Documents/Github/Practice/Shiny_Practice/test')
shiny::runApp('Documents/Github/INFO201_Final/AE_TeamWellness/p2_shinyapp')
q()
source('~/Documents/Github/INFO201_Final/AE_TeamWellness/p2_shinyapp/analysis.R', echo=TRUE)
setwd("~/Documents/Github/INFO201_Final/AE_TeamWellness/p2_shinyapp")
source('~/Documents/Github/INFO201_Final/AE_TeamWellness/p2_shinyapp/analysis.R', echo=TRUE)
library(scales)
get_state_disorders <- function(given_state){
return_plot_data <- disorder_by_state %>%
filter(State == given_state)
return_plot_data_m <- melt(return_plot_data, id.vars = "State")
return_plot <- ggplot(subset(return_plot_data_m, State == given_state), aes(x = variable, y = value)) +
geom_bar(stat = "identity") +
labs(x = "Disorders", y = "# of People") +
ggtitle(paste("# of People Affected by a Specific Disorder in", given_state)) +
scale_x_discrete(labels = wrap_format(10))
return_plot
}
get_state_disorders("Texas")
setwd("~/Documents/Github/INFO201_Final/AE_TeamWellness/p3_shinyapp")
shiny::runApp('~/Documents/Github/INFO201_Final/AE_TeamWellness/p2_shinyapp')
setwd("~/Documents/Github/INFO201_Final/AE_TeamWellness/p2_shinyapp")
runApp()
setwd("~/Documents/Github/Work/Assignment_7/a7--jovecalimlim/a7_shinyapp")
setwd("~/Documents/Github/INFO201_Final/AE_TeamWellness/p3_shinyapp")
runApp()
runApp()
get_state_disorders <- function(given_state){
return_plot_data <- disorder_by_state %>%
filter(State == given_state)
return_plot_data_m <- melt(return_plot_data, id.vars = "State")
return_plot <- ggplot(subset(return_plot_data_m, State == given_state),
aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity") +
labs(x = "Disorders", y = "# of People") +
ggtitle(paste("# of People Affected by a Specific Disorder in", given_state)) +
scale_x_discrete(labels = wrap_format(10))
return_plot
}
runApp()
runApp()
runApp()
runApp()
runApp()
